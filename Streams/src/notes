Stream into:
	Its a functional process approach to process collections(List , Set , Map etc)
	Good when dealing with large data set
	Lazy evaluation:
		The operation will be executed only when a terminal operation is applied
	parallel processing:
		Can be easily parallelized with parallelStream()
		
		
intermediate/Lazy operations(Transform Data)| It will return a stream itself
	map(x->x*2)
	filter(x->x>10)
	sorted()
	distinct()
	limit(n)
	skip(n)
	
Terminal operations:
	collect()
	count()
	findFirst()
	findAny()
	anyMatch(condition)
	allMatch(condition)
	noneMatch(condition)
	

To find the difference between 2 localDateTime:
	time1.until(time2,ChronoUnit.MILLIS) or another unit of time 

For smaller data sets use for loops
for larger one use stream
again larger in millions and thousands data sets use parallelStream


sorted(Comparator.comparing(Employee::getSalary).reversed())

?
	examples using Collectors.tomap(...)
	and using stream on Map
